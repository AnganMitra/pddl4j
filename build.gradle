buildscript {
    configurations.all {
        resolutionStrategy.force 'net.java.dev.javacc:javacc:6.1.2'
    }
}

plugins {
    id "ca.coglinc.javacc" version "2.3.1"
}
apply plugin: 'java'
apply plugin: 'findbugs'
//apply plugin: 'checkstyle'


group 'fr.uga'
version '2.0.0.0-SNAPSHOT'
sourceCompatibility = 1.8

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

compileJavacc {
    inputDirectory = file('src/main/java/fr/uga/pddl4j/parser/lexer/')
    outputDirectory = file('src/main/java/fr/uga/pddl4j/parser/lexer')
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                'Implementation-Version': version,
                'Gradle-Version':'Gradle 2.10',
                'Built-By': 'Damien Pellier',
                'Premain-Class': 'fr.uga.pddl4j.util.MemoryAgent'
    }
}

task run (type: JavaExec, dependsOn: build){
    if (project.hasProperty("Args")) {
        println("arguments list : " + Args)
        args(Args.split(','))
    }

    jvmArgs = ["-javaagent:build/libs/pddl4j-2.0.0.0-SNAPSHOT.jar", "-server", "-Xms2048m", "-Xmx2048m"]

    description = "Run HSP plannin algorithm"
    main = "fr.uga.pddl4j.planners.hsp.HSP"
    classpath = sourceSets.main.runtimeClasspath
}

task cleanGenerated(type:Delete) {
    delete fileTree(dir: "src/main/java/fr/uga/pddl4j/parser/lexer", exclude:"Lexer.jj")
}

clean.doLast() {
    cleanGenerated.execute()
}

findbugsMain.doLast() {
    println("Find bug process completed without finding issue")
}

findbugsMain.onlyIf() { project.hasProperty('findbug') }


defaultTasks 'clean', 'build'
